// Code generated by protoc-gen-go. DO NOT EDIT.
// source: book.proto

package book

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BookId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookId) Reset()         { *m = BookId{} }
func (m *BookId) String() string { return proto.CompactTextString(m) }
func (*BookId) ProtoMessage()    {}
func (*BookId) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{0}
}

func (m *BookId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookId.Unmarshal(m, b)
}
func (m *BookId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookId.Marshal(b, m, deterministic)
}
func (m *BookId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookId.Merge(m, src)
}
func (m *BookId) XXX_Size() int {
	return xxx_messageInfo_BookId.Size(m)
}
func (m *BookId) XXX_DiscardUnknown() {
	xxx_messageInfo_BookId.DiscardUnknown(m)
}

var xxx_messageInfo_BookId proto.InternalMessageInfo

func (m *BookId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type BookInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Author               string   `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Page                 int32    `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookInfo) Reset()         { *m = BookInfo{} }
func (m *BookInfo) String() string { return proto.CompactTextString(m) }
func (*BookInfo) ProtoMessage()    {}
func (*BookInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{1}
}

func (m *BookInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookInfo.Unmarshal(m, b)
}
func (m *BookInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookInfo.Marshal(b, m, deterministic)
}
func (m *BookInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookInfo.Merge(m, src)
}
func (m *BookInfo) XXX_Size() int {
	return xxx_messageInfo_BookInfo.Size(m)
}
func (m *BookInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BookInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BookInfo proto.InternalMessageInfo

func (m *BookInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BookInfo) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *BookInfo) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type BookPage struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BookPage) Reset()         { *m = BookPage{} }
func (m *BookPage) String() string { return proto.CompactTextString(m) }
func (*BookPage) ProtoMessage()    {}
func (*BookPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{2}
}

func (m *BookPage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookPage.Unmarshal(m, b)
}
func (m *BookPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookPage.Marshal(b, m, deterministic)
}
func (m *BookPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookPage.Merge(m, src)
}
func (m *BookPage) XXX_Size() int {
	return xxx_messageInfo_BookPage.Size(m)
}
func (m *BookPage) XXX_DiscardUnknown() {
	xxx_messageInfo_BookPage.DiscardUnknown(m)
}

var xxx_messageInfo_BookPage proto.InternalMessageInfo

func (m *BookPage) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type BookList struct {
	Count                int32       `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Bookinfo             []*BookInfo `protobuf:"bytes,2,rep,name=bookinfo,proto3" json:"bookinfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BookList) Reset()         { *m = BookList{} }
func (m *BookList) String() string { return proto.CompactTextString(m) }
func (*BookList) ProtoMessage()    {}
func (*BookList) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{3}
}

func (m *BookList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BookList.Unmarshal(m, b)
}
func (m *BookList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BookList.Marshal(b, m, deterministic)
}
func (m *BookList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BookList.Merge(m, src)
}
func (m *BookList) XXX_Size() int {
	return xxx_messageInfo_BookList.Size(m)
}
func (m *BookList) XXX_DiscardUnknown() {
	xxx_messageInfo_BookList.DiscardUnknown(m)
}

var xxx_messageInfo_BookList proto.InternalMessageInfo

func (m *BookList) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *BookList) GetBookinfo() []*BookInfo {
	if m != nil {
		return m.Bookinfo
	}
	return nil
}

type Postresponse struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Postresponse) Reset()         { *m = Postresponse{} }
func (m *Postresponse) String() string { return proto.CompactTextString(m) }
func (*Postresponse) ProtoMessage()    {}
func (*Postresponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{4}
}

func (m *Postresponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Postresponse.Unmarshal(m, b)
}
func (m *Postresponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Postresponse.Marshal(b, m, deterministic)
}
func (m *Postresponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Postresponse.Merge(m, src)
}
func (m *Postresponse) XXX_Size() int {
	return xxx_messageInfo_Postresponse.Size(m)
}
func (m *Postresponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Postresponse.DiscardUnknown(m)
}

var xxx_messageInfo_Postresponse proto.InternalMessageInfo

func (m *Postresponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*BookId)(nil), "book.BookId")
	proto.RegisterType((*BookInfo)(nil), "book.BookInfo")
	proto.RegisterType((*BookPage)(nil), "book.BookPage")
	proto.RegisterType((*BookList)(nil), "book.BookList")
	proto.RegisterType((*Postresponse)(nil), "book.Postresponse")
}

func init() { proto.RegisterFile("book.proto", fileDescriptor_1e89d0eaa98dc5d8) }

var fileDescriptor_1e89d0eaa98dc5d8 = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0x97, 0xb6, 0x2b, 0xf3, 0xac, 0x0c, 0x39, 0x88, 0x84, 0x5d, 0x48, 0xc9, 0x55, 0x11,
	0x1c, 0x3a, 0xc1, 0x07, 0xf0, 0x4e, 0xd9, 0xc5, 0xe8, 0x1b, 0x74, 0x36, 0xab, 0x65, 0x2c, 0xa7,
	0x34, 0xd9, 0xfb, 0xf8, 0xa8, 0x92, 0x34, 0x86, 0xa0, 0xde, 0xfd, 0xa7, 0xdf, 0x7f, 0x4e, 0xff,
	0x9f, 0x00, 0x1c, 0x88, 0x4e, 0x9b, 0x61, 0x24, 0x43, 0x98, 0x59, 0x2d, 0x38, 0xe4, 0xaf, 0x44,
	0xa7, 0xb7, 0x16, 0x57, 0x90, 0xf4, 0x2d, 0x67, 0x25, 0xab, 0xae, 0xea, 0xa4, 0x6f, 0xc5, 0x3b,
	0x2c, 0x1c, 0x51, 0x47, 0x42, 0x84, 0x4c, 0x35, 0x67, 0xe9, 0xa9, 0xd3, 0x78, 0x0b, 0x79, 0x73,
	0x31, 0x9f, 0x34, 0xf2, 0xc4, 0x7d, 0xf5, 0x93, 0xf5, 0x0e, 0x4d, 0x27, 0x79, 0x5a, 0xb2, 0x6a,
	0x5e, 0x3b, 0x2d, 0xee, 0xa6, 0x5b, 0xfb, 0xa6, 0x93, 0x81, 0xb3, 0x88, 0xef, 0x26, 0xbe, 0xeb,
	0xb5, 0xc1, 0x1b, 0x98, 0x7f, 0xd0, 0x45, 0x19, 0x6f, 0x98, 0x06, 0xbc, 0x87, 0x85, 0xcd, 0xdb,
	0xab, 0x23, 0xf1, 0xa4, 0x4c, 0xab, 0xe5, 0x76, 0xb5, 0x71, 0x65, 0x7e, 0x32, 0xd6, 0x81, 0x8b,
	0x12, 0x8a, 0x3d, 0x69, 0x33, 0x4a, 0x3d, 0x90, 0xd2, 0x12, 0xaf, 0x21, 0x3d, 0xeb, 0xce, 0x87,
	0xb7, 0x72, 0xfb, 0xc5, 0x20, 0xb3, 0x8b, 0xf8, 0x00, 0xcb, 0x4e, 0x9a, 0xd0, 0xb3, 0x88, 0x6e,
	0xb6, 0xeb, 0x5f, 0x7f, 0x10, 0x33, 0x7c, 0x0a, 0x76, 0x17, 0x35, 0x32, 0xd8, 0x6a, 0x7f, 0x17,
	0x1e, 0x19, 0xbe, 0x40, 0x31, 0x90, 0xfe, 0x77, 0xc7, 0x7a, 0xd6, 0x38, 0xcd, 0x71, 0x60, 0x31,
	0xab, 0xd8, 0x21, 0x77, 0xaf, 0xf4, 0xfc, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x1a, 0xe5, 0x6a, 0x3a,
	0xb3, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BookClient is the client API for Book service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BookClient interface {
	GetBookInfo(ctx context.Context, in *BookId, opts ...grpc.CallOption) (*BookInfo, error)
	GetBookList(ctx context.Context, in *BookPage, opts ...grpc.CallOption) (Book_GetBookListClient, error)
	PostBookList(ctx context.Context, opts ...grpc.CallOption) (Book_PostBookListClient, error)
}

type bookClient struct {
	cc *grpc.ClientConn
}

func NewBookClient(cc *grpc.ClientConn) BookClient {
	return &bookClient{cc}
}

func (c *bookClient) GetBookInfo(ctx context.Context, in *BookId, opts ...grpc.CallOption) (*BookInfo, error) {
	out := new(BookInfo)
	err := c.cc.Invoke(ctx, "/book.Book/getBookInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookClient) GetBookList(ctx context.Context, in *BookPage, opts ...grpc.CallOption) (Book_GetBookListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Book_serviceDesc.Streams[0], "/book.Book/getBookList", opts...)
	if err != nil {
		return nil, err
	}
	x := &bookGetBookListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Book_GetBookListClient interface {
	Recv() (*BookInfo, error)
	grpc.ClientStream
}

type bookGetBookListClient struct {
	grpc.ClientStream
}

func (x *bookGetBookListClient) Recv() (*BookInfo, error) {
	m := new(BookInfo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bookClient) PostBookList(ctx context.Context, opts ...grpc.CallOption) (Book_PostBookListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Book_serviceDesc.Streams[1], "/book.Book/postBookList", opts...)
	if err != nil {
		return nil, err
	}
	x := &bookPostBookListClient{stream}
	return x, nil
}

type Book_PostBookListClient interface {
	Send(*BookInfo) error
	CloseAndRecv() (*Postresponse, error)
	grpc.ClientStream
}

type bookPostBookListClient struct {
	grpc.ClientStream
}

func (x *bookPostBookListClient) Send(m *BookInfo) error {
	return x.ClientStream.SendMsg(m)
}

func (x *bookPostBookListClient) CloseAndRecv() (*Postresponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Postresponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BookServer is the server API for Book service.
type BookServer interface {
	GetBookInfo(context.Context, *BookId) (*BookInfo, error)
	GetBookList(*BookPage, Book_GetBookListServer) error
	PostBookList(Book_PostBookListServer) error
}

func RegisterBookServer(s *grpc.Server, srv BookServer) {
	s.RegisterService(&_Book_serviceDesc, srv)
}

func _Book_GetBookInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookServer).GetBookInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/book.Book/GetBookInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookServer).GetBookInfo(ctx, req.(*BookId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Book_GetBookList_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BookPage)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BookServer).GetBookList(m, &bookGetBookListServer{stream})
}

type Book_GetBookListServer interface {
	Send(*BookInfo) error
	grpc.ServerStream
}

type bookGetBookListServer struct {
	grpc.ServerStream
}

func (x *bookGetBookListServer) Send(m *BookInfo) error {
	return x.ServerStream.SendMsg(m)
}

func _Book_PostBookList_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BookServer).PostBookList(&bookPostBookListServer{stream})
}

type Book_PostBookListServer interface {
	SendAndClose(*Postresponse) error
	Recv() (*BookInfo, error)
	grpc.ServerStream
}

type bookPostBookListServer struct {
	grpc.ServerStream
}

func (x *bookPostBookListServer) SendAndClose(m *Postresponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *bookPostBookListServer) Recv() (*BookInfo, error) {
	m := new(BookInfo)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Book_serviceDesc = grpc.ServiceDesc{
	ServiceName: "book.Book",
	HandlerType: (*BookServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getBookInfo",
			Handler:    _Book_GetBookInfo_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "getBookList",
			Handler:       _Book_GetBookList_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "postBookList",
			Handler:       _Book_PostBookList_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "book.proto",
}
